import React, { useState } from 'react'

interface StoryTextareaInputFormProps {
  isTextarea?: boolean; // New prop to determine input type
}

export default function StoryTextareaInputForm({ isTextarea = true }: StoryTextareaInputFormProps) {
  const [story, setStory] = useState("")
  const [isError, setIsError] = useState(false)

  const handleNext = () => {
    if (!story.trim() && isError) {
      // If the field is empty and there's an error, maintain the error state
      return
    }
    // Handle navigation to next page
    console.log("Proceeding with story:", story)
    setIsError(false)
  }

  return (
    <div style={{
      minHeight: '100vh',
      backgroundColor: '#fdf7f2',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      padding: '1rem',
      fontFamily: 'Arial, sans-serif'
    }}>
      <div style={{
        width: '100%',
        maxWidth: '40rem',
        backgroundColor: 'white',
        borderRadius: '0.5rem',
        boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',
        overflow: 'hidden'
      }}>
        <div style={{ padding: '2rem' }}>
          <h2 style={{
            fontSize: '1.5rem',
            fontWeight: 'normal',
            color: isError ? '#e53e3e' : '#333',
            marginBottom: '0.5rem',
            textAlign: 'center',
            transition: 'color 0.3s ease'
          }}>
            How and when did you first meet Johnson? Tell us a story about your relationship early on or when you first met
          </h2>
          <p style={{
            fontSize: '1rem',
            color: '#666',
            marginBottom: '1.5rem',
            textAlign: 'center'
          }}>
            While this section is optional, providing detailed stories or memories can greatly enhance the quality of the speech generated by the AI. The more context you provide, the more personalized and meaningful the speech will be!
          </p>
          <div style={{ marginBottom: '0.5rem' }}>
            {isTextarea ? (
              <textarea
                value={story}
                onChange={(e) => {
                  setStory(e.target.value)
                  setIsError(false)
                }}
                style={{
                  width: '100%',
                  height: '200px',
                  padding: '0.75rem',
                  border: `1px solid ${isError ? '#e53e3e' : '#3b82f6'}`,
                  borderRadius: '0.375rem',
                  fontSize: '1rem',
                  outline: 'none',
                  resize: 'vertical',
                  transition: 'border-color 0.3s ease',
                  color: 'black'
                }}
                placeholder="Enter your story here (optional)..."
              />
            ) : (
              <input
                type="text"
                value={story}
                onChange={(e) => {
                  setStory(e.target.value)
                  setIsError(false)
                }}
                style={{
                  width: '100%',
                  padding: '0.75rem',
                  border: `1px solid ${isError ? '#e53e3e' : '#3b82f6'}`,
                  borderRadius: '0.375rem',
                  fontSize: '1rem',
                  outline: 'none',
                  transition: 'border-color 0.3s ease',
                  color: 'black'
                }}
                placeholder="Enter your story here (optional)..."
              />
            )}
          </div>
        </div>
        <div style={{
          backgroundColor: '#2d4739',
          color: 'white',
          padding: '1rem',
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center'
        }}>
          <button style={{
            backgroundColor: 'transparent',
            border: 'none',
            color: 'white',
            cursor: 'pointer',
            fontSize: '0.875rem',
            padding: '0.5rem 1rem'
          }}>
            ← PREVIOUS
          </button>
          {isError && (
            <div style={{
              backgroundColor: '#c53030',
              color: 'white',
              padding: '0.5rem 1rem',
              borderRadius: '0.25rem',
              fontSize: '0.875rem'
            }}>
              This field is optional but recommended.
            </div>
          )}
          <button
            onClick={() => {
              if (!story.trim()) {
                setIsError(true)
              }
              handleNext()
            }}
            style={{
              backgroundColor: 'transparent',
              border: 'none',
              color: 'white',
              cursor: 'pointer',
              fontSize: '0.875rem',
              padding: '0.5rem 1rem'
            }}
          >
            NEXT →
          </button>
        </div>
      </div>
    </div>
  )
}